#lang racket
;; Each new term in the Fibonacci sequence is
;; generated by adding the previous two terms.
;; By starting with 1 and 2, the first 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence
;; whose values do not exceed four million, find the sum of the even-valued terms.
(include "l.rkt")

(define four-million 4000000)

(define (fib n)
  (cond ((= n 0) 1)
        ((= n 1) 1)
        (else (+ (fib (- n 1))
                 (fib (- n 2))))))

(define (ep/002/execute/sub n result)
  (let ((tmp (fib n)))
    (if (> tmp four-million)
        result
        (if (even? tmp)
            (ep/002/execute/sub (+ n 1) (+ result tmp))
            (ep/002/execute/sub (+ n 1) result)))))

(define (ep/002/execute)
  (ep/002/execute/sub 1 1))

(ep/002/execute)


